# This template will:
    #   Create a VPC with:
    #       2 Public Subnets
    #       2 Private Subnets
    #   An Internet Gateway (with routes to it for Public Subnets)
    #   A NAT Gateway for outbound access (with routes from Private Subnets set to use it)
    # 

AWSTemplateFormatVersion: 2010-09-09
Description: This template deploy a VPC , with a pair of public and private subnets


Resources:

#adding details of VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        -
          Key: Name
          Value: vivek_cf_vpc

#adding details of subnets 

  #adding public subnet 1 in availabilty zone ap-south-1a 
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: ap-south-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: Name
          Value: vivek_cf_publicsub_1

  #adding private subnet 1 in availabilty zone 1a 
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: ap-south-1a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        -
          Key: Name
          Value: vivek_cf_privatesub_1

  #adding public subnet 2 in availabilty zone 1b 
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: ap-south-1b
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: Name
          Value: vivek_cf_publicsub_2

  #adding private subnet 2 in availabilty zone 2a
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: ap-south-1b
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        -
          Key: Name
          Value: vivek_cf_privatesub_2

#creating internet gateway 
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: Name
          Value: vivek_cf_ig

#adding internet gateway with VPC 
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC


#creating route table for public subnets 
  
  #creating public route table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: Name
          Value: vivek_cf_public_route

  #adding routes in the public route table for IG
  PublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  #adding public subnets in the subnet association of public route table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

#creating NAT Gateway 

  #creating elastic ip 
  ElasticIP1:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    Properties:
      Domain: VPC
      Tags:
        -
          Key: Name
          Value: vivek_cf_eip1

  #creating nat gateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: ElasticIP1
    Properties:
      AllocationId: !GetAtt ElasticIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        -
          Key: Name
          Value: vivek_cf_ng
      


  #creating private route table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: Name
          Value: vivek_cf_private_route
  
  #adding route for private route table
  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      NatGatewayId: !Ref NatGateway
      DestinationCidrBlock: 0.0.0.0/0

  #adding private subnets in the subnet association of private route table
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable


















  
